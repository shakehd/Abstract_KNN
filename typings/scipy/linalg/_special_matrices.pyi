from _typeshed import Incomplete

def tri(N, M: Incomplete | None = ..., k: int = ..., dtype: Incomplete | None = ...): ...
def tril(m, k: int = ...): ...
def triu(m, k: int = ...): ...
def toeplitz(c, r: Incomplete | None = ...): ...
def circulant(c): ...
def hankel(c, r: Incomplete | None = ...): ...
def hadamard(n, dtype=...): ...
def leslie(f, s): ...
def kron(a, b): ...
def block_diag(*arrs): ...
def companion(a): ...
def helmert(n, full: bool = ...): ...
def hilbert(n): ...
def invhilbert(n, exact: bool = ...): ...
def pascal(n, kind: str = ..., exact: bool = ...): ...
def invpascal(n, kind: str = ..., exact: bool = ...): ...
def dft(n, scale: Incomplete | None = ...): ...
def fiedler(a): ...
def fiedler_companion(a): ...
def convolution_matrix(a, n, mode: str = ...): ...
