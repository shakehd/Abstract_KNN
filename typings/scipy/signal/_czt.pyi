from _typeshed import Incomplete

def czt_points(m, w: Incomplete | None = ..., a: complex = ...): ...

class CZT:
    def __init__(self, n, m: Incomplete | None = ..., w: Incomplete | None = ..., a: complex = ...) -> None: ...
    def __call__(self, x, *, axis: int = ...): ...
    def points(self): ...

class ZoomFFT(CZT):
    w: Incomplete
    a: Incomplete
    def __init__(self, n, fn, m: Incomplete | None = ..., *, fs: int = ..., endpoint: bool = ...) -> None: ...

def czt(x, m: Incomplete | None = ..., w: Incomplete | None = ..., a: complex = ..., *, axis: int = ...): ...
def zoom_fft(x, fn, m: Incomplete | None = ..., *, fs: int = ..., endpoint: bool = ..., axis: int = ...): ...
