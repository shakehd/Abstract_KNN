from ._ufuncs import psi
from _typeshed import Incomplete
from numpy import sinc as sinc

def diric(x, n): ...
def jnjnp_zeros(nt): ...
def jnyn_zeros(n, nt): ...
def jn_zeros(n, nt): ...
def jnp_zeros(n, nt): ...
def yn_zeros(n, nt): ...
def ynp_zeros(n, nt): ...
def y0_zeros(nt, complex: bool = ...): ...
def y1_zeros(nt, complex: bool = ...): ...
def y1p_zeros(nt, complex: bool = ...): ...
def jvp(v, z, n: int = ...): ...
def yvp(v, z, n: int = ...): ...
def kvp(v, z, n: int = ...): ...
def ivp(v, z, n: int = ...): ...
def h1vp(v, z, n: int = ...): ...
def h2vp(v, z, n: int = ...): ...
def riccati_jn(n, x): ...
def riccati_yn(n, x): ...
def erf_zeros(nt): ...
def fresnelc_zeros(nt): ...
def fresnels_zeros(nt): ...
def fresnel_zeros(nt): ...
def assoc_laguerre(x, n, k: float = ...): ...
digamma = psi

def polygamma(n, x): ...
def mathieu_even_coef(m, q): ...
def mathieu_odd_coef(m, q): ...
def lpmn(m, n, z): ...
def clpmn(m, n, z, type: int = ...): ...
def lqmn(m, n, z): ...
def bernoulli(n): ...
def euler(n): ...
def lpn(n, z): ...
def lqn(n, z): ...
def ai_zeros(nt): ...
def bi_zeros(nt): ...
def lmbda(v, x): ...
def pbdv_seq(v, x): ...
def pbvv_seq(v, x): ...
def pbdn_seq(n, z): ...
def ber_zeros(nt): ...
def bei_zeros(nt): ...
def ker_zeros(nt): ...
def kei_zeros(nt): ...
def berp_zeros(nt): ...
def beip_zeros(nt): ...
def kerp_zeros(nt): ...
def keip_zeros(nt): ...
def kelvin_zeros(nt): ...
def pro_cv_seq(m, n, c): ...
def obl_cv_seq(m, n, c): ...
def comb(N, k, exact: bool = ..., repetition: bool = ..., legacy: Incomplete | None = ...): ...
def perm(N, k, exact: bool = ...): ...
def factorial(n, exact: bool = ...): ...
def factorial2(n, exact: bool = ...): ...
def factorialk(n, k, exact: bool = ...): ...
def zeta(x, q: Incomplete | None = ..., out: Incomplete | None = ...): ...
