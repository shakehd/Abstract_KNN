from ._optimize import OptimizeResult as OptimizeResult
from _typeshed import Incomplete
from scipy.optimize._differentiable_functions import FD_METHODS as FD_METHODS
from scipy.optimize._hessian_update_strategy import HessianUpdateStrategy as HessianUpdateStrategy

class BaseQuadraticSubproblem:
    def __init__(self, x, fun, jac, hess: Incomplete | None = ..., hessp: Incomplete | None = ...) -> None: ...
    def __call__(self, p): ...
    @property
    def fun(self): ...
    @property
    def jac(self): ...
    @property
    def hess(self): ...
    def hessp(self, p): ...
    @property
    def jac_mag(self): ...
    def get_boundaries_intersections(self, z, d, trust_radius): ...
    def solve(self, trust_radius) -> None: ...
